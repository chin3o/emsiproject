{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chinz\\\\code\\\\emsiproject\\\\src\\\\components\\\\AdmissionRate\\\\AdmissionRate.js\";\nimport React from 'react';\nimport './AdmissionRate.css';\nimport ProgressBar from './ProgressBar'; //returns the admission rate as percentage and returns a corresponding ProgressBar component\n//props should be data.results.(index) \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdmissionRate(props) {\n  var rate = 0; //When the admission rate is 0 we return N/A with not filled up bar\n  //Some schools from the data returned 0 for admission rate field\n\n  if (props['latest.admissions.admission_rate.overall']) {\n    rate = Math.round(props['latest.admissions.admission_rate.overall'] * 100);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '90%',\n          height: '100%'\n        },\n        children: [\"Admission rate:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: \"#868fd1\"\n          },\n          children: [rate, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), \" \", ProgressBar({\n          barRate: rate\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  } else {\n    rate = 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '90%',\n          height: '100%'\n        },\n        children: [\"Admission rate:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: \"#868fd1\"\n          },\n          children: \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" \", ProgressBar({\n          barRate: rate\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_c = AdmissionRate;\nexport default AdmissionRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdmissionRate\");","map":{"version":3,"names":["React","ProgressBar","AdmissionRate","props","rate","Math","round","fontSize","height","fontWeight","color","barRate"],"sources":["C:/Users/chinz/code/emsiproject/src/components/AdmissionRate/AdmissionRate.js"],"sourcesContent":["import React from 'react';\r\nimport './AdmissionRate.css';\r\nimport ProgressBar from './ProgressBar';\r\n\r\n//returns the admission rate as percentage and returns a corresponding ProgressBar component\r\n//props should be data.results.(index) \r\nfunction AdmissionRate(props){\r\n    var rate = 0;\r\n    //When the admission rate is 0 we return N/A with not filled up bar\r\n    //Some schools from the data returned 0 for admission rate field\r\n    if(props['latest.admissions.admission_rate.overall']){\r\n      rate = Math.round(props['latest.admissions.admission_rate.overall'] * 100);\r\n      return(\r\n        <>\r\n          <p style={{fontSize: '90%', height: '100%'}}>\r\n            Admission rate:<br></br>\r\n            <span style={{fontWeight: 'bold', color: \"#868fd1\"}}>{rate}%</span> {ProgressBar({barRate:rate})}\r\n          </p>\r\n        </>\r\n      )\r\n    } else {\r\n      rate = 0;\r\n      return(\r\n        <>\r\n          <p style={{fontSize: '90%', height: '100%'}}>\r\n            Admission rate:<br></br>\r\n            <span style={{fontWeight: 'bold', color: \"#868fd1\"}}>N/A</span> {ProgressBar({barRate:rate})}\r\n          </p>\r\n        </>\r\n      )\r\n    }\r\n    \r\n  }\r\n  \r\nexport default AdmissionRate;\r\n  "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;;;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;EACzB,IAAIC,IAAI,GAAG,CAAX,CADyB,CAEzB;EACA;;EACA,IAAGD,KAAK,CAAC,0CAAD,CAAR,EAAqD;IACnDC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAAC,0CAAD,CAAL,GAAoD,GAA/D,CAAP;IACA,oBACE;MAAA,uBACE;QAAG,KAAK,EAAE;UAACI,QAAQ,EAAE,KAAX;UAAkBC,MAAM,EAAE;QAA1B,CAAV;QAAA,2CACiB;UAAA;UAAA;UAAA;QAAA,QADjB,eAEE;UAAM,KAAK,EAAE;YAACC,UAAU,EAAE,MAAb;YAAqBC,KAAK,EAAE;UAA5B,CAAb;UAAA,WAAsDN,IAAtD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,OAEuEH,WAAW,CAAC;UAACU,OAAO,EAACP;QAAT,CAAD,CAFlF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAQD,CAVD,MAUO;IACLA,IAAI,GAAG,CAAP;IACA,oBACE;MAAA,uBACE;QAAG,KAAK,EAAE;UAACG,QAAQ,EAAE,KAAX;UAAkBC,MAAM,EAAE;QAA1B,CAAV;QAAA,2CACiB;UAAA;UAAA;UAAA;QAAA,QADjB,eAEE;UAAM,KAAK,EAAE;YAACC,UAAU,EAAE,MAAb;YAAqBC,KAAK,EAAE;UAA5B,CAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,OAEmET,WAAW,CAAC;UAACU,OAAO,EAACP;QAAT,CAAD,CAF9E;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAQD;AAEF;;KA1BMF,a;AA4BT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}